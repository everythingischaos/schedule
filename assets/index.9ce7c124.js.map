{"version":3,"file":"index.9ce7c124.js","sources":["../../vite/modulepreload-polyfill","../../script.js"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","//check if browser supports storage\nlet hasStorage = false;\nif (typeof Storage !== \"undefined\") {\n  hasStorage = true;\n} else {\n  hasStorage = false;\n}\n\n//the default schedule\nlet defaultAllSchedules = JSON.parse(\n  '{\"A\":[{\"name\":\"1\",\"start\":\"8:30\",\"end\":\"9:20\"},{\"name\":\"2\",\"start\":\"9:25\",\"end\":\"10:20\"},{\"name\":\"3\",\"start\":\"10:25\",\"end\":\"11:15\"},{\"name\":\"Break\",\"start\":\"11:15\",\"end\":\"11:30\"},{\"name\":\"4\",\"start\":\"11:35\",\"end\":\"12:25\"},{\"name\":\"5\",\"start\":\"12:30\",\"end\":\"13:20\"},{\"name\":\"Lunch\",\"start\":\"13:20\",\"end\":\"13:50\"},{\"name\":\"6\",\"start\":\"13:55\",\"end\":\"14:45\"},{\"name\":\"7\",\"start\":\"14:50\",\"end\":\"15:40\"}],\"E\":[{\"name\":\"1\",\"start\":\"8:30\",\"end\":\"9:20\"},{\"name\":\"2\",\"start\":\"9:25\",\"end\":\"10:55\"},{\"name\":\"Break\",\"start\":\"10:55\",\"end\":\"11:10\"},{\"name\":\"Tutorial\",\"start\":\"11:15\",\"end\":\"12:00\"},{\"name\":\"4\",\"start\":\"12:05\",\"end\":\"13:35\"},{\"name\":\"Lunch\",\"start\":\"13:35\",\"end\":\"14:05\"},{\"name\":\"6\",\"start\":\"14:10\",\"end\":\"15:40\"}],\"O\":[{\"name\":\"1\",\"start\":\"8:30\",\"end\":\"9:20\"},{\"name\":\"3\",\"start\":\"9:25\",\"end\":\"10:55\"},{\"name\":\"Break\",\"start\":\"10:55\",\"end\":\"11:10\"},{\"name\":\"5\",\"start\":\"11:15\",\"end\":\"12:45\"},{\"name\":\"Lunch\",\"start\":\"12:45\",\"end\":\"13:15\"},{\"name\":\"7\",\"start\":\"13:20\",\"end\":\"14:50\"}],\"SA\":[{\"name\":\"1\",\"start\":\"8:30\",\"end\":\"9:25\"},{\"name\":\"3\",\"start\":\"9:30\",\"end\":\"10:45\"},{\"name\":\"Rally\",\"start\":\"10:50\",\"end\":\"11:25\"},{\"name\":\"Break\",\"start\":\"11:25\",\"end\":\"11:40\"},{\"name\":\"5\",\"start\":\"11:45\",\"end\":\"13:00\"},{\"name\":\"Lunch\",\"start\":\"13:00\",\"end\":\"13:30\"},{\"name\":\"7\",\"start\":\"13:35\",\"end\":\"14:50\"}],\"LA\":[{\"name\":\"1\",\"start\":\"8:30\",\"end\":\"9:15\"},{\"name\":\"3\",\"start\":\"9:20\",\"end\":\"10:30\"},{\"name\":\"Assembly\",\"start\":\"10:35\",\"end\":\"11:35\"},{\"name\":\"Break\",\"start\":\"11:35\",\"end\":\"11:50\"},{\"name\":\"5\",\"start\":\"11:55\",\"end\":\"13:05\"},{\"name\":\"Lunch\",\"start\":\"13:05\",\"end\":\"13:35\"},{\"name\":\"7\",\"start\":\"13:40\",\"end\":\"14:50\"}],\"NS\":\"none\"}'\n);\n\nlet days = JSON.parse('[\"A\",\"E\",\"O\",\"E\",\"O\"]');\n\nlet latestIntervalID;\n\n//used to change the time for debugging\nfunction newDebugDate() {\n  let date = new Date();\n\n  let hours = 0;\n  let minutes = hours * 60 + 0;\n  let seconds = minutes * 60 + 0;\n  let ms = seconds * 1000 + 0;\n  date.setTime(date.getTime() + ms);\n  return date;\n}\n\nlet override;\nlet nextTime;\n\nfunction checkForChanges() {\n  //get the override data for rallies and stuff\n  fetch(\n    \"https://everythingischaos.com/schedule-data/overrides.json?=\" +\n      Math.floor(Math.random() * 1000),\n    { cache: \"no-store\" }\n  ).then(\n    async (data) => {\n      const response = await data.json();\n      if (JSON.stringify(response) != JSON.stringify(override)) {\n        override = response;\n        generateSchedule(defaultAllSchedules);\n      }\n    },\n    () => {\n      showAlert(\"Network error!  Schedule might not be up to date.\");\n      clearInterval(changesIntervalID);\n    }\n  );\n\n  //get the schedule json in case it's been updated\n  fetch(\n    \"https://everythingischaos.com/schedule-data/schedules.json?=\" +\n      Math.floor(Math.random() * 1000),\n    { cache: \"no-store\" }\n  ).then(\n    async (data) => {\n      const response = await data.json();\n      if (JSON.stringify(response) != JSON.stringify(defaultAllSchedules)) {\n        defaultAllSchedules = response;\n        generateSchedule(defaultAllSchedules);\n      }\n    },\n    () => {\n      showAlert(\"Network error!  Schedule might not be up to date.\");\n      clearInterval(changesIntervalID);\n    }\n  );\n\n  //do the days of the week i guess\n  fetch(\n    \"https://everythingischaos.com/schedule-data/days.json?=\" +\n      Math.floor(Math.random() * 1000),\n    { cache: \"no-store\" }\n  ).then(\n    async (data) => {\n      const response = await data.json();\n      if (JSON.stringify(response) != JSON.stringify(days)) {\n        days = response;\n        generateSchedule(defaultAllSchedules);\n      }\n    },\n    () => {\n      showAlert(\"Network error!  Schedule might not be up to date.\");\n      clearInterval(changesIntervalID);\n    }\n  );\n}\n\ncheckForChanges();\nlet changesIntervalID = setInterval(checkForChanges, 10000);\n\n/**\n * Generate list of time events (start/ends)\n * @param {Object[]} allSchedules - Array of all schedules in the week\n */\nfunction generateSchedule(allSchedules, caasppChecked) {\n  let dayNum = newDebugDate().getDay();\n  let currentSchedule = allSchedules[days[dayNum - 1]];\n  let caasppLoaded = false;\n  if (caasppChecked) {\n    const curDate = newDebugDate();\n    const scheduleId = `CAASPP_${curDate.getDate()}-${curDate.getMonth() + 1}`;\n\n    if (allSchedules.contains(scheduleId)) {\n      currentSchedule = allSchedules[scheduleId];\n      caasppLoaded = true;\n    }\n  }\n  if (override && !caasppLoaded) {\n    const curDate = newDebugDate();\n    const dateString = `${curDate.getDate()}-${curDate.getMonth() + 1}-${curDate.getFullYear()}`;\n\n    if (override[dateString]) {\n      currentSchedule = allSchedules[override[dateString]];\n      console.log(currentSchedule);\n    }\n  }\n  if (dayNum == 0 || dayNum == 6 || currentSchedule == \"none\") {\n    document.querySelector(\"#timer\").textContent = \"No school today!\";\n    return;\n  } else {\n    document.querySelector(\"#periods\").innerHTML =\n      \"<tr><th>Period</th><th>Start</th><th>End</th></tr>\";\n\n    //will have the time events pushed to it\n    let times = [];\n    if (latestIntervalID) {\n      clearInterval(latestIntervalID);\n    }\n\n    //for each period\n    for (let i = 0; i < currentSchedule.length; i++) {\n      let currentP = currentSchedule[i];\n\n      //converts the 00:00 format to an actual date object, then turn it into a ms timestamp\n      let start = timeStringToDate(currentP.start);\n      let end = timeStringToDate(currentP.end);\n\n      //push the start and end timestamps to times\n      times.push({\n        time: start.getTime(),\n        name: \"Start of \" + currentP.name,\n      });\n      times.push({\n        time: end.getTime(),\n        name: \"End of \" + currentP.name,\n      });\n\n      let startAPM = start.toLocaleString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n      let endAPM = end.toLocaleString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n\n      //Add period to schedule in the DOM\n      //Set user-define period title if it exists\n      let pTitle;\n      if (\n        currentP.name != \"Break\" &&\n        currentP.name != \"Lunch\" &&\n        !currentP.name.includes(\"walkout\") /**Temporary for protest */ &&\n        getClassName(currentP.name)\n      ) {\n        pTitle = currentP.name + \": \" + getClassName(currentP.name);\n      } else {\n        //set it to default if there is no user-defined title\n        pTitle = currentP.name;\n      }\n\n      //Create table row\n      let tr = \"<tr\";\n      if (currentP.name.includes(\"walkout\")) {\n        tr += ' class=\"walkout\"';\n      } else if (currentP.name == \"Break\" || currentP.name == \"Lunch\") {\n        tr += ' class=\"break\"';\n      } else {\n        tr += \" value=\" + currentP.name;\n      }\n      tr += `>\n      <td>${pTitle}</td>\n      <td>${startAPM}</td>\n      <td>${currentP.name.includes(\"walkout\") ? \"~\" : \"\"}${endAPM}</td>\n    </tr>`;\n      document.getElementById(\"periods\").innerHTML += tr;\n    }\n\n    // $('.pinput').each(function (i) {\n    //   $(this).val(getClassName(String(i + 1)));\n    // });\n    document.querySelectorAll(\".pinput\").forEach((el, i) => {\n      const name = getClassName(String(i + 1));\n      el.value = name ? name : \"\";\n    });\n\n    //Render timer at 30 fps lol\n    latestIntervalID = setInterval(renderTimer, 3.33, times, dayNum);\n  }\n}\n\n/**\n * Get the user-defined title of a period from the system-defined one (dependent on date)\n * @param {string} period - The system-defined title for a period ('1', '5', 'Break', etc.)\n * @returns {(string|undefined)} The user-defined title if storage is supported and there is one\n */\nfunction getClassName(period) {\n  //If the period isn't Lunch or Break, and the browser allows appStorage\n  if (hasStorage) {\n    //if it does, get the name of the period if it exists\n    return localStorage.getItem(period)\n      ? localStorage.getItem(period)\n      : undefined;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Converts 00:00 to date object (dependent on date)\n * @param {string} timeString - The time in HH:SS format\n * @returns {Date} The parsed time in the current day at the given time\n */\nfunction timeStringToDate(timeString) {\n  //create a new date object for current time\n  let output = newDebugDate();\n\n  //create array of x:y [x, y]\n  let numbers = timeString.split(\":\");\n\n  //set the time of the date object to the numbers with curent date and 0 ms\n  output.setHours(numbers[0], numbers[1], 0);\n  return output;\n}\n\n/**\n * Find the next event (start/end of period/break)\n * @param {Object[]} timesList - Array of all the time events with timestamp\n * @param {number} timesList[].time - Unix timestamp of the event\n * @param {string} timesList[].name - System-defined name for the event\n * @returns Returns object with the next event's timestamp and name\n */\nfunction findNext(timesList) {\n  //create current date\n  let curDate = newDebugDate();\n\n  //for every event, check to see if it's passed\n  for (let i = 0; i < timesList.length; i++) {\n    //if the current time is before the event time, break the loop and return it\n    if (timesList[i].time >= curDate.getTime()) {\n      return timesList[i];\n    }\n  }\n\n  //if all events have passed, return undefined\n  return undefined;\n}\n\n//set the next event\nlet prevSec = 0;\nlet prevNext = 0;\nlet caasppChecked = false;\nif (hasStorage) caasppChecked = eval(localStorage.getItem(\"caasppChecked\"));\nif (caasppChecked == null) {\n  caasppChecked = document.querySelector(\".caasppinput\").checked;\n} else document.querySelector(\".caasppinput\").checked = caasppChecked;\n\n/**\n * Render the timer till next event\n * @param {Object} nextEvent - Object containing the next event's info\n * @param {number} nextEvent.time - Unix timestamp of the event\n * @param {string} nextEvent.name - System-defined name for the event\n */\nfunction renderTimer(times, dayNum) {\n  if (dayNum != newDebugDate().getDay()) {\n    generateSchedule(defaultAllSchedules);\n  }\n\n  nextTime = findNext(times);\n\n  //Set current date\n  let curDate = newDebugDate();\n\n  //define timer element\n  let timerDOM = document.getElementById(\"timer\");\n\n  //if there is an event coming up\n  if (nextTime) {\n    //check if the event is still ahead and not past\n    let difference = nextTime.time - curDate.getTime();\n\n    //Set text to set the timer to, parsed with the msToTime thing\n    let text = msToTime(difference);\n    if (document.visibilityState == \"visible\") {\n      //Set timer object to the data returned\n      /*\n      if (msChecked)\n        timerDOM.innerHTML =\n          text.minutes + \":\" + text.seconds + \".\" + text.milliseconds;\n      else */\n      timerDOM.innerHTML = text.minutes + \":\" + text.seconds;\n      if (prevNext != nextTime) {\n        document.querySelector(\"#next\").textContent =\n          \"Until \" +\n          nextTime.name +\n          (getClassName(nextTime.name.slice(-1))\n            ? \": \" + getClassName(nextTime.name.slice(-1))\n            : \"\");\n        prevNext = nextTime;\n      }\n    }\n\n    if (prevSec != text.seconds) {\n      //set the title to the time\n      // if (document.visibilityState == \"visible\") {\n      document.title = text.minutes + \":\" + text.seconds;\n      // } else {\n      //   document.title = text.minutes + \":\" + String(parseInt(text.seconds)-1);\n      // }\n\n      //set the prev seconds to the latest second\n      prevSec = text.seconds;\n    }\n  } else {\n    //if there is no event coming up, display text\n    timerDOM.innerText = \"School's Out!\";\n    document.title = \"School's Out!\";\n  }\n}\n\n/**\n * Converts MS to Minutes, Seconds, and Milliseconds\n * @param {number} duration - The time in MS to convert to m, s, and ms\n * @returns Object containing the minutes, seconds, and ms\n */\nfunction msToTime(duration) {\n  //find the ms, seconds, and minutes\n  var milliseconds = Math.floor(duration % 1000),\n    seconds = Math.floor((duration / 1000) % 60),\n    minutes = Math.floor(duration / (1000 * 60));\n\n  //add 0 to beginning of numbers if it's only one digit\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n  milliseconds =\n    milliseconds < 100\n      ? milliseconds < 10\n        ? \"00\" + milliseconds\n        : \"0\" + milliseconds\n      : milliseconds;\n\n  /*\n  if (msChecked)\n    return {\n      minutes: minutes,\n      seconds: seconds,\n      milliseconds: milliseconds,\n    };\n  */\n\n  return {\n    minutes: minutes,\n    seconds: seconds,\n  };\n}\n\n//show the naming menu to change names of periods\ndocument.querySelector(\"#shownaming\").addEventListener(\"click\", () => {\n  const naming = document.querySelector(\"#naming\");\n  if (naming.classList.contains(\"hidden\")) {\n    document.querySelector(\"#naming\").classList.add(\"shown\");\n    document.querySelector(\"#naming\").classList.remove(\"hidden\");\n  } else if (naming.classList.contains(\"shown\")) {\n    document.querySelector(\"#naming\").classList.add(\"hidden\");\n    document.querySelector(\"#naming\").classList.remove(\"shown\");\n  }\n  // hide footer\n  const footer = document.querySelector(\"#footer\");\n  if (footer.classList.contains(\"hidden\")) {\n    document.querySelector(\"#footer\").classList.add(\"shown\");\n    document.querySelector(\"#footer\").classList.remove(\"hidden\");\n  } else if (footer.classList.contains(\"shown\")) {\n    document.querySelector(\"#footer\").classList.add(\"hidden\");\n    document.querySelector(\"#footer\").classList.remove(\"shown\");\n  }\n});\n\n//change period name on input\ndocument.querySelectorAll(\".pinput\").forEach((el) => {\n  el.addEventListener(\"input\", (e) => {\n    let input = e.target;\n    setClassName(input.attributes.id.value[1], input.value);\n  });\n});\n\n// update caaspp setting on input\ndocument.querySelectorAll(\".caasppinput\").forEach((el) => {\n  el.addEventListener(\"change\", (e) => {\n    let input = e.target;\n    caasppChecked = input.checked;\n    if (hasStorage) {\n      localStorage.setItem(\"caasppChecked\", input.caasppChecked);\n    }\n  });\n});\n\n/**\n * Change a class name\n * @param {string} period - The system-defined period name to change\n * @param {string} className - The user-defined name to change it to\n */\nfunction setClassName(period, className) {\n  //only changes if there is local storage enabled\n  if (hasStorage) {\n    const el = document.querySelector(`tr[value=\"${period}\"] td:nth-child(1)`);\n    //if there is an actual class name, set the name\n    if (className && className != \"\") {\n      localStorage.setItem(period, className);\n      if (el) {\n        el.textContent = period + \": \" + className;\n      }\n    } else {\n      //if not, remove it and reset the schedule\n      localStorage.removeItem(period);\n      if (el) {\n        el.textContent = period;\n      }\n    }\n  }\n}\n\nlet alertHidden = false;\nfunction showAlert(text) {\n  if (!alertHidden) {\n    const alert = document.querySelector(\".alert\");\n    document.querySelector(\"#alert-text\").textContent = text;\n    if (!alert.classList.contains(\"alert-visible\")) {\n      alert.classList.add(\"alert-visible\");\n    }\n  }\n}\n\ndocument.querySelector(\"#alert-close\").addEventListener(\"click\", () => {\n  document.querySelector(\".alert\").classList.remove(\"alert-visible\");\n  alertHidden = true;\n});\n"],"names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","date","ms","data","response","allSchedules","caasppChecked","dayNum","currentSchedule","caasppLoaded","curDate","scheduleId","dateString","times","i","currentP","start","end","startAPM","endAPM","pTitle","tr","el","name","period","timeString","output","numbers","timesList","timerDOM","difference","text","duration","seconds","minutes","naming","footer","e","input","className","alert"],"mappings":"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"}