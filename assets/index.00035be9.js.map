{"version":3,"file":"index.00035be9.js","sources":["../../vite/modulepreload-polyfill","../../script.js"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","window.onload = (e) => {\n  const caasppView = document.getElementById(\"caaspp_view\");\n  const editView = document.getElementById(\"edit_view\");\n  const periodInputs = document.getElementsByClassName(\"pinput\");\n\n  caasppView.onclick = () => handleCaasppLabel();\n  editView.onclick = () => handleEditLabel();\n  for (let i = 0; i < periodInputs.length; i++) {\n    periodInputs.item(i).oninput = (e) =>\n      setClassName(\n        parseInt(\n          e.target.parentElement.previousElementSibling.textContent.slice(-1)\n        ),\n        e.target.value\n      );\n\n    periodInputs.item(i).onfocus = (e) => {\n      e.target.parentElement.animate(\n        {\n          backgroundColor: \"#313244\",\n        },\n        { duration: 100, fill: \"forwards\" }\n      );\n      e.target.parentElement.style.border = \"solid 1px #cba6f7\";\n    };\n\n    periodInputs.item(i).addEventListener(\"focusout\", (e) => {\n      e.target.parentElement.animate(\n        {\n          backgroundColor: \"#45475a\",\n        },\n        { duration: 100, fill: \"forwards\" }\n      );\n      e.target.parentElement.style.border = \"none\";\n    });\n  }\n\n  //check if browser supports storage\n  let hasStorage = typeof Storage !== \"undefined\";\n\n  //the default schedule\n  let allSchedules = JSON.parse(\n    '{\"A\":[{\"name\":\"1\",\"start\":\"8:30\",\"end\":\"9:20\"},{\"name\":\"2\",\"start\":\"9:25\",\"end\":\"10:20\"},{\"name\":\"3\",\"start\":\"10:25\",\"end\":\"11:15\"},{\"name\":\"Break\",\"start\":\"11:15\",\"end\":\"11:30\"},{\"name\":\"4\",\"start\":\"11:35\",\"end\":\"12:25\"},{\"name\":\"5\",\"start\":\"12:30\",\"end\":\"13:20\"},{\"name\":\"Lunch\",\"start\":\"13:20\",\"end\":\"13:50\"},{\"name\":\"6\",\"start\":\"13:55\",\"end\":\"14:45\"},{\"name\":\"7\",\"start\":\"14:50\",\"end\":\"15:40\"}],\"E\":[{\"name\":\"1\",\"start\":\"8:30\",\"end\":\"9:20\"},{\"name\":\"2\",\"start\":\"9:25\",\"end\":\"10:55\"},{\"name\":\"Break\",\"start\":\"10:55\",\"end\":\"11:10\"},{\"name\":\"Tutorial\",\"start\":\"11:15\",\"end\":\"12:00\"},{\"name\":\"4\",\"start\":\"12:05\",\"end\":\"13:35\"},{\"name\":\"Lunch\",\"start\":\"13:35\",\"end\":\"14:05\"},{\"name\":\"6\",\"start\":\"14:10\",\"end\":\"15:40\"}],\"O\":[{\"name\":\"1\",\"start\":\"8:30\",\"end\":\"9:20\"},{\"name\":\"3\",\"start\":\"9:25\",\"end\":\"10:55\"},{\"name\":\"Break\",\"start\":\"10:55\",\"end\":\"11:10\"},{\"name\":\"5\",\"start\":\"11:15\",\"end\":\"12:45\"},{\"name\":\"Lunch\",\"start\":\"12:45\",\"end\":\"13:15\"},{\"name\":\"7\",\"start\":\"13:20\",\"end\":\"14:50\"}],\"SA\":[{\"name\":\"1\",\"start\":\"8:30\",\"end\":\"9:25\"},{\"name\":\"3\",\"start\":\"9:30\",\"end\":\"10:45\"},{\"name\":\"Rally\",\"start\":\"10:50\",\"end\":\"11:25\"},{\"name\":\"Break\",\"start\":\"11:25\",\"end\":\"11:40\"},{\"name\":\"5\",\"start\":\"11:45\",\"end\":\"13:00\"},{\"name\":\"Lunch\",\"start\":\"13:00\",\"end\":\"13:30\"},{\"name\":\"7\",\"start\":\"13:35\",\"end\":\"14:50\"}],\"LA\":[{\"name\":\"1\",\"start\":\"8:30\",\"end\":\"9:15\"},{\"name\":\"3\",\"start\":\"9:20\",\"end\":\"10:30\"},{\"name\":\"Assembly\",\"start\":\"10:35\",\"end\":\"11:35\"},{\"name\":\"Break\",\"start\":\"11:35\",\"end\":\"11:50\"},{\"name\":\"5\",\"start\":\"11:55\",\"end\":\"13:05\"},{\"name\":\"Lunch\",\"start\":\"13:05\",\"end\":\"13:35\"},{\"name\":\"7\",\"start\":\"13:40\",\"end\":\"14:50\"}],\"NS\":\"none\"}'\n  );\n  let days = JSON.parse('[\"A\",\"E\",\"O\",\"E\",\"O\"]');\n\n  let latestIntervalID;\n  let overrideSchedules;\n  let nextItem;\n  let caasppScheduleIsEnabled = false;\n  let editViewIsHidden = true;\n  if (hasStorage)\n    caasppScheduleIsEnabled = eval(localStorage.getItem(\"showCaaspp\"));\n  if (caasppScheduleIsEnabled == null) caasppScheduleIsEnabled = false;\n\n  //used to change the time for debugging\n  function newDebugDate() {\n    /*\n    let date = new Date();\n    let hours = 0;\n    let minutes = hours * 60 + 0;\n    let seconds = minutes * 60 + 0;\n    let ms = seconds * 1000 + 0;\n    date.setTime(date.getTime() + ms);\n    */\n    return new Date();\n  }\n\n  function checkForChanges() {\n    //get the override data for rallies and stuff\n    fetch(\n      \"https://everythingischaos.com/schedule-data/overrides.json?=\" +\n        Math.floor(Math.random() * 1000),\n      { cache: \"no-store\" }\n    ).then(\n      async (data) => {\n        const response = await data.json();\n        if (JSON.stringify(response) != JSON.stringify(overrideSchedules)) {\n          overrideSchedules = response;\n          updateTable();\n        }\n      },\n      () => {\n        showAlert(\"Connection Lost\");\n      }\n    );\n\n    //get the schedule json in case it's been updated\n    fetch(\n      \"https://everythingischaos.com/schedule-data/schedules.json?=\" +\n        Math.floor(Math.random() * 1000),\n      { cache: \"no-store\" }\n    ).then(\n      async (data) => {\n        const response = await data.json();\n        if (JSON.stringify(response) != JSON.stringify(allSchedules)) {\n          allSchedules = response;\n          updateTable();\n        }\n      },\n      () => {\n        showAlert(\"Connection Lost\");\n      }\n    );\n  }\n\n  checkForChanges();\n  setInterval(checkForChanges, 10000);\n\n  /**\n   * Generate list of time events (start/ends)\n   * @param {Object[]} allSchedules - Array of all schedules in the week\n   */\n  async function updateTable() {\n    let date = new Date();\n    let currentSchedule = allSchedules[days[date.getDay() - 1]];\n    let caasppLoaded = false;\n    if (caasppScheduleIsEnabled) {\n      const scheduleId = `CAASPP_${date.getDate()}-${date.getMonth() + 1}`;\n\n      if (scheduleId in allSchedules) {\n        currentSchedule = allSchedules[scheduleId];\n        caasppLoaded = true;\n      }\n    }\n    if (overrideSchedules && !caasppLoaded) {\n      const dateString = `${date.getDate()}-${\n        date.getMonth() + 1\n      }-${date.getFullYear()}`;\n\n      if (overrideSchedules[dateString]) {\n        currentSchedule = allSchedules[overrideSchedules[dateString]];\n        console.log(currentSchedule);\n      }\n    }\n    if (date.getDay() == 0 || date.getDay() == 6 || currentSchedule == \"none\") {\n      document.querySelector(\"#timer\").textContent = \"No school today!\";\n      return;\n    }\n    document\n      .getElementById(\"periods\")\n      .parentElement.animate(\n        {\n          opacity: 0,\n        },\n        { duration: 300, fill: \"forwards\" }\n      )\n      .finished.then(() => {\n        document.querySelector(\"#periods\").innerHTML =\n          \"<tr><th>Period</th><th>Start</th><th>End</th></tr>\";\n\n        //will have the time events pushed to it\n        let times = [];\n        if (latestIntervalID) {\n          clearInterval(latestIntervalID);\n        }\n\n        //for each period\n        for (let i = 0; i < currentSchedule.length; i++) {\n          let currentP = currentSchedule[i];\n\n          //converts the 00:00 format to an actual date object, then turn it into a ms timestamp\n          let start = timeStringToDate(currentP.start);\n          let end = timeStringToDate(currentP.end);\n\n          //push the start and end timestamps to times\n          times.push({\n            time: start.getTime(),\n            name: \"Start of \" + currentP.name,\n          });\n          times.push({\n            time: end.getTime(),\n            name: \"End of \" + currentP.name,\n          });\n\n          let startAPM = start.toLocaleString(\"en-US\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            hour12: true,\n          });\n          let endAPM = end.toLocaleString(\"en-US\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            hour12: true,\n          });\n\n          //Add period to schedule in the DOM\n          //Set user-define period title if it exists\n          let pTitle;\n          if (\n            parseInt(currentP.name.charAt(0)) != null &&\n            getClassName(currentP.name)\n          ) {\n            console.log(parseInt(currentP.name.charAt(0)));\n            console.log(currentP.name);\n            pTitle = currentP.name + \": \" + getClassName(currentP.name);\n          } else {\n            //set it to default if there is no user-defined title\n            pTitle = currentP.name;\n          }\n\n          //Create table row\n          let tr = \"<tr\";\n          if (currentP.name == \"Break\" || currentP.name == \"Lunch\") {\n            tr += ' class=\"break\"';\n          } else {\n            tr += \" value=\" + currentP.name;\n          }\n          tr += `>\n      <td>${pTitle}</td>\n      <td>${startAPM}</td>\n      <td>${endAPM}</td>\n      </tr>`;\n          document.getElementById(\"periods\").innerHTML += tr;\n        }\n\n        // $('.pinput').each(function (i) {\n        //   $(this).val(getClassName(String(i + 1)));\n        // });\n        for (let i = 0; i < periodInputs.length; i++) {\n          periodInputs.item(i).value = getClassName(i + 1)\n            ? getClassName(i + 1)\n            : \"\";\n        }\n\n        //Render timer at 30 fps lol\n        latestIntervalID = setInterval(renderTimer, 3.33, times, date.getDay());\n\n        document.getElementById(\"periods\").parentElement.animate(\n          {\n            opacity: 1,\n          },\n          { duration: 200, fill: \"forwards\" }\n        );\n      });\n  }\n\n  /**\n   * Get the user-defined title of a period from the system-defined one (dependent on date)\n   * @param {string} period - The system-defined title for a period ('1', '5', 'Break', etc.)\n   * @returns {(string|undefined)} The user-defined title if storage is supported and there is one\n   */\n  function getClassName(period) {\n    //If the period isn't Lunch or Break, and the browser allows appStorage\n    if (hasStorage) {\n      //if it does, get the name of the period if it exists\n      return localStorage.getItem(period)\n        ? localStorage.getItem(period)\n        : undefined;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Converts 00:00 to date object (dependent on date)\n   * @param {string} timeString - The time in HH:SS format\n   * @returns {Date} The parsed time in the current day at the given time\n   */\n  function timeStringToDate(timeString) {\n    //create a new date object for current time\n    let output = newDebugDate();\n\n    //create array of x:y [x, y]\n    let numbers = timeString.split(\":\");\n\n    //set the time of the date object to the numbers with curent date and 0 ms\n    output.setHours(numbers[0], numbers[1], 0);\n    return output;\n  }\n\n  /**\n   * Find the next event (start/end of period/break)\n   * @param {Object[]} timesList - Array of all the time events with timestamp\n   * @param {number} timesList[].time - Unix timestamp of the event\n   * @param {string} timesList[].name - System-defined name for the event\n   * @returns Returns object with the next event's timestamp and name\n   */\n  function findNext(timesList) {\n    //create current date\n    let curDate = newDebugDate();\n\n    //for every event, check to see if it's passed\n    for (let i = 0; i < timesList.length; i++) {\n      //if the current time is before the event time, break the loop and return it\n      if (timesList[i].time >= curDate.getTime()) {\n        return timesList[i];\n      }\n    }\n\n    //if all events have passed, return undefined\n    return undefined;\n  }\n\n  //set the next event\n  let prevSec = 0;\n  let prevNext = 0;\n\n  /**\n   * Render the timer till next event\n   * @param {Object} nextEvent - Object containing the next event's info\n   * @param {number} nextEvent.time - Unix timestamp of the event\n   * @param {string} nextEvent.name - System-defined name for the event\n   */\n  function renderTimer(times, dayNum) {\n    if (dayNum != newDebugDate().getDay()) {\n      updateTable();\n    }\n\n    nextItem = findNext(times);\n\n    //Set current date\n    let curDate = newDebugDate();\n\n    //define timer element\n    let timerDOM = document.getElementById(\"timer\");\n\n    //if there is an event coming up\n    if (nextItem) {\n      //check if the event is still ahead and not past\n      let difference = nextItem.time - curDate.getTime();\n\n      //Set text to set the timer to, parsed with the msToTime thing\n      let text = msToTime(difference);\n      if (document.visibilityState == \"visible\") {\n        //Set timer object to the data returned\n        /*\n        if (msChecked)\n          timerDOM.innerHTML =\n            text.minutes + \":\" + text.seconds + \".\" + text.milliseconds;\n        else */\n        timerDOM.innerHTML = text.minutes + \":\" + text.seconds;\n        if (prevNext != nextItem) {\n          document.querySelector(\"#next\").textContent =\n            \"Until \" +\n            nextItem.name +\n            (getClassName(nextItem.name.charAt(0))\n              ? \": \" + getClassName(nextItem.name.charAt(0))\n              : \"\");\n          prevNext = nextItem;\n        }\n      }\n\n      if (prevSec != text.seconds) {\n        //set the title to the time\n        // if (document.visibilityState == \"visible\") {\n        document.title = text.minutes + \":\" + text.seconds;\n        // } else {\n        //   document.title = text.minutes + \":\" + String(parseInt(text.seconds)-1);\n        // }\n\n        //set the prev seconds to the latest second\n        prevSec = text.seconds;\n      }\n    } else {\n      //if there is no event coming up, display text\n      timerDOM.innerText = \"School's Out!\";\n      document.title = \"School's Out!\";\n    }\n  }\n\n  /**\n   * Converts MS to Minutes, Seconds, and Milliseconds\n   * @param {number} duration - The time in MS to convert to m, s, and ms\n   * @returns Object containing the minutes, seconds, and ms\n   */\n  function msToTime(duration) {\n    //find the ms, seconds, and minutes\n    var milliseconds = Math.floor(duration % 1000),\n      seconds = Math.floor((duration / 1000) % 60),\n      minutes = Math.floor(duration / (1000 * 60));\n\n    //add 0 to beginning of numbers if it's only one digit\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    milliseconds =\n      milliseconds < 100\n        ? milliseconds < 10\n          ? \"00\" + milliseconds\n          : \"0\" + milliseconds\n        : milliseconds;\n\n    /*\n    if (msChecked)\n      return {\n        minutes: minutes,\n        seconds: seconds,\n        milliseconds: milliseconds,\n      };\n    */\n\n    return {\n      minutes: minutes,\n      seconds: seconds,\n    };\n  }\n\n  function handleCaasppLabel() {\n    caasppScheduleIsEnabled = !caasppScheduleIsEnabled;\n    console.log(caasppScheduleIsEnabled);\n    caasppView.previousElementSibling.textContent = caasppScheduleIsEnabled\n      ? \"Hide CAASPP Schedule\"\n      : \"Show CAASPP Schedule\";\n    caasppScheduleIsEnabled\n      ? caasppView.previousElementSibling.classList.add(\"selected\")\n      : caasppView.previousElementSibling.classList.remove(\"selected\");\n    updateTable();\n  }\n\n  function handleEditLabel() {\n    editViewIsHidden = !editViewIsHidden;\n    console.log(editViewIsHidden);\n    editView.previousElementSibling.textContent = editViewIsHidden\n      ? \"Edit Schedule\"\n      : \"Close\";\n    editViewIsHidden\n      ? editView.previousElementSibling.classList.remove(\"selected\")\n      : editView.previousElementSibling.classList.add(\"selected\");\n\n    const editingTable = document.querySelector(\"#edit\");\n\n    editingTable.animate(\n      {\n        opacity: editViewIsHidden ? 0 : 1,\n        visibility: editViewIsHidden ? \"hidden\" : \"visible\",\n      },\n      { duration: 100, fill: \"forwards\" }\n    );\n  }\n\n  /*\n  //change period name on input\n  document.querySelectorAll(\".pinput\").forEach((el) => {\n    el.addEventListener(\"input\", (e) => {\n      let input = e.target;\n      setClassName(input.attributes.id.value[1], input.value);\n    });\n  });\n  */\n\n  /**\n   * Change a class name\n   * @param {string} period - The system-defined period name to change\n   * @param {string} className - The user-defined name to change it to\n   */\n  function setClassName(period, className) {\n    //only changes if there is local storage enabled\n    if (hasStorage) {\n      const el = document.querySelector(\n        `tr[value=\"${period}\"] td:nth-child(1)`\n      );\n      //if there is an actual class name, set the name\n      if (className && className != \"\") {\n        localStorage.setItem(period, className);\n        if (el) {\n          el.textContent = period + \": \" + className;\n        }\n      } else {\n        //if not, remove it and reset the schedule\n        localStorage.removeItem(period);\n        if (el) {\n          el.textContent = period;\n        }\n      }\n    }\n  }\n\n  let alertHidden = false;\n  function showAlert(text) {\n    if (!alertHidden) {\n      const alert = document.querySelector(\".alert\");\n      document.querySelector(\"#alert-text\").textContent = text;\n      if (!alert.classList.contains(\"alert-visible\")) {\n        alert.classList.add(\"alert-visible\");\n      }\n    }\n  }\n\n  document.querySelector(\"#alert-close\").addEventListener(\"click\", () => {\n    document.querySelector(\".alert\").classList.remove(\"alert-visible\");\n    alertHidden = true;\n  });\n};\n"],"names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","i","e","data","response","date","currentSchedule","caasppLoaded","scheduleId","dateString","times","currentP","start","end","startAPM","endAPM","pTitle","tr","period","timeString","output","numbers","timesList","curDate","dayNum","timerDOM","difference","text","duration","seconds","minutes","className","el","alert"],"mappings":"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"}